shiny::runApp()
install.packages("yaml")
runApp()
runApp('~/Desktop/Spr2017-proj2-grp10/app')
runApp('~/Desktop/Spr2017-proj2-grp12/app')
library(xlsx)
install.packages("xlsx")
runApp('~/Desktop/Spr2017-proj2-grp12/app')
library(rJava)
install.packages("rJava")
runApp('~/Desktop/Spr2017-proj2-grp12/app')
runApp()
runApp('~/Desktop/Data')
runApp('~/Desktop/Data')
runApp('~/Desktop/Data/test')
runApp('~/Desktop/Data/test')
runApp()
library(shiny)
?div
install.packages("shinythemes")
runApp('~/Desktop/Fall2018-Project2-sec2proj2_grp2/app')
install.packages("choroplethr")
runApp('~/Desktop/Fall2018-Project2-sec2proj2_grp2/app')
install.packages("choroplethrZip")
shiny::runApp()
install.packages('choroplethrZip', dependencies=TRUE, repos='http://cran.rstudio.com/')
devtools::install_github('arilamstein/choroplethrZip@v1.5.0')
shiny::runApp()
school.select <- readRDS("C:/Users/SHE3/Desktop/Spr2017-proj2-grp4/data/school.select.rds")
school.select
head(school.select)
?radioButtons
?navbarPage
?tabPanel
runApp('~/Desktop/Spr2017-proj2-grp4/app')
ui <- navbarPage(theme="minty.css",
title="NY School",
tabPanel(title="School Map"),
navbarMenu(title="Comparison",
tabPanel(title="Test Scores (SAT/ACT"),
tabPanel(title="Type of School"),
tabPanel(title="Location"),
tabPanel(title="Paying"),
tabPanel(title="Diversity")),
tabPanel(title="Recommendation System")
)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
devtools::install_github("nteetor/yonder")
library(yonder)
runApp()
runApp()
runApp()
library(shinythemes)
?shinytheme
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?fluidPage
?fluidRow
runApp()
runApp()
runApp()
runApp()
runApp()
?column
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
name(tags)
names(tags)
tags$center
runApp()
?tabBox
runApp()
runApp()
?shinyUI
runApp()
library(shiny)
runApp()
install.packages(c("carData", "cli", "data.table", "ggridges", "grpreg", "htmlwidgets", "nloptr", "sentimentr", "tweenr"))
shiny::runApp()
runApp()
runApp()
?tags$style
?h1
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
?verbatimTextOutput
?textOutput
?span
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/Spr2017-proj2-grp4/app')
runApp()
runApp()
runApp()
runApp()
runApp()
fonts()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop/Spr2017-proj2-grp4/app')
runApp()
?actionLink
runApp('~/Desktop')
library(shinydashboard)
runApp('~/Desktop')
runApp('~/Desktop')
server = function(input, output, session){}
runApp('~/Desktop')
runApp('~/Desktop')
runApp('~/Desktop')
library(shiny.router)
runApp('~/Desktop')
?page
runApp()
runApp()
runApp()
runApp()
runApp()
runApp('~/Desktop')
schooldata <- read.csv(file="../data/final3data_with_tuition.csv")
schooldata <- read.csv(file="final3data_with_tuition.csv")
getwd()
read.csv("final3data_with_tuition.csv")
schooldata <- read.csv(file="final3data_with_tuition.csv")
schooldata <- read.csv("final3data_with_tuition.csv")
getwd()
setwd("C:/Users/SHE3/Desktop/Fall2018-Project2-sec2proj2_grp2/app")
school <- read.csv("final3data_with_tuition.csv")
getwd()
school <- read.csv("school.csv",heaer=T)
school<- read.csv("school.csv")
schooldata <- read.csv(file="final3data_with_tuition.csv")
head(school)
names(school)
names(school)[16:27]
head(schooldata)
which.max(schooldata$CrimeRate)
max(schooldata$CrimeRate)
min(schooldata$CrimeRate)
library(dplyr)
filter(schooldata$Name %in% "Stony Brook University")
schooldata%>% filter(Name %in% 'Stony Brook University')
min(schooldata$Tuition.and.fees.y)
typeof(schooldata$Tuition.and.fees.x)
typeof(schooldata$Tuition.and.fees.y)
min(schooldata$Tuition.and.fees.x)
levels(schooldata$Tuition.and.fees.x)
unfactor(schooldata$Tuition.and.fees.x)
as.numeric(levels(schooldata$Tuition.and.fees.x))[schooldata$Tuition.and.fees.x]
as.numeric(schooldata$Tuition.and.fees.x)
install.packages("dmm")
library(dmm)
unfactor(schooldata$Tuition.and.fees.x)
as.integer(schooldata$Tuition.and.fees.x)
which.min(as.integer(schooldata$Tuition.and.fees.x))
as.numeric(as.character(schooldata$Tuition.and.fees.x))
transpose <- t(schooldata)
head(transpose)
datatable(transpose)
library(DT)
datatable(transpose)
transpose[1,]
nrow(transpose)
transpose[2:32,]
t1 <- transpose[2:32,]
datatable(t1)
colnames(t1) <- t1[3,]
datatable(t1)
?write.csv
write.csv(t1,file="transpose.csv")
unclass(schooldata$Tuition.and.fees.x)
mode(schooldata$Tuition.and.fees.x)
min(schooldata$Tuition.and.fees.x)
transpose <- read.csv("transpose.csv")
min(transpose[29,])
transpose[29,]
mode(transpose[29,])
mode(transpose[28,])
as.numeric(as.character(transpose[28,]))
transpose[28,]
as.numeric(as.character(unlist(transpose[28,])))
transpose[29,144]
transpose[28,144]
as.numeric(as.character(unlist(transpose[4,])))
datatable(schooldata)
as.numeric(as.character(schooldata$SAT))
datatable(transpose)
transpose[13,]
table(schooldata$City)
table(schooldata$Citytype)
?df
schooldata$SAT
datatable(schooldata)
t2 <- as.numeric(as.character(unlist(schooldata$Tuition.and.fees.x)))
head(t2)
t2 <- as.numeric(as.character(unlist(schooldata$Tuition.and.fees.y)))
head(t2)
t2 <- as.numeric(as.character(unlist(transpose[28,])))
head(t2)
mode(schooldata$Tuition.and.fees.x)
school1 <- schooldata %>%
mutate(city_nocity=ifelse(schooldata$Citytype=="City",1,0))
datatable(school1)
shiny::runApp()
runApp()
?reactive
runApp()
runApp()
runApp()
runApp()
runApp()
shiny::runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
install.pacakges("ggradar")
install.packages("ggradar")
devtools::install_github("ricardo-bion/ggradar",
dependencies=TRUE)
library(ggradar)
?ggradar
runApp()
runApp()
runApp()
runApp()
?switch
runApp()
runApp()
runApp()
runApp()
runApp()
?layout
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
library(DT)
datatable(schooldata)
schooldata <- read.csv(file="final3data_with_tuition.csv",stringsAsFactors = FALSE)
datatable(schooldata)
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
fonts()
font_import()
font_import()
fonts()
runApp()
runApp()
fonts()
runApp()
runApp()
fonts()
runApp()
runApp()
runApp()
font()
fonts()
runApp()
fonts()
runApp()
runApp()
runApp()
runApp()
fonts()
import_font()
library(extrafonts)
library(extrafont)
loadfonts()
fonts()
loadfonts()
fonts()
shiny::runApp()
runApp()
runApp()
runApp()
library(dplyr)
head(schooldata)
schooldata <- read.csv(file="final3data_with_tuition.csv",stringsAsFactors = FALSE)
head(schooldata)
filter(schooldata, SAT>1300)
school1 <- schooldata %>% mutate(city_nocity=ifelse(schooldata$Citytype=='City',1,0))
head(school1)
s1 <- filter(school1, SAT > 1300)
head(s1)
runApp()
runApp()
typeof(school1$SAT)
typeof(school1$Tuition.and.fees.x)
typeof(schooldata)
typeof(schooldata$Tuition.and.fees.x)
runApp()
typeof(school1$SAT)
school_SAT <- school1$SAT
s_sat <- as.numeric(school_SAT)
s_sat
typeof(s_sat)
runApp()
runApp()
1300>s_sat
s2 <- as.numeric(school1$SAT)
typeof(s2)
runApp()
typeof(c1)
c1 <- as.numeric(school1$city_nocity)
typeof(c1)
runApp()
runApp()
runApp()
1400 < s2
runApp()
s4 <- filter(school1, SAT <1200 & city_nocity == 1 & CrimeRate <= 1000 & Tuition.and.fees.y <= 50000)
head(s4)
s4$Name
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
if(1300<schooldata$SAT){
s5 <- filter(school1, SAT>1300)
head(s5$Name)
} else {print ("No")}
ifelse(1300<schooldata$SAT,head(filter(school1,SAT>1300)),"NO")
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
runApp()
schooldata <- read.csv(file="final3data_with_tuition.csv",stringsAsFactors = FALSE)
head(schooldata)
shiny::runApp()
runApp()
runApp()
school1 <- schooldata %>% mutate(city_nocity=ifelse(schooldata$Citytype=='City',1,0))
runApp()
runApp()
runApp()
runApp()
filter(school1,as.numeric(SAT)<1300)
runApp()
runApp()
runApp()
filter(school1,SAT<1000 & CrimeRate <700)
filter(school1,CrimeRate<700)
o1 <- filter(school1, SAT <1000 & CrimeRate <700)
o1
school1$CrimeRate
mean(school1$CrimeRate)
mean(school1$SAT)
school1$SAT
filter(school1, SAT<1200 & CrimeRate <700)
runApp()
runApp()
school1$Tuition.and.fees.y
as.numeric(school1$Tuition.and.fees.y)
as.numeric(school1$Tuition.and.fees.x)
typeof(school1$Tuition.and.fees.x)
typeof(school1$SAT)
as.numeric(school1$SAT)
as.numeric(as.character(school1$Tuition.and.fees.x))
as.numeric(as.character(school1$Tuition.and.fees.y))
runApp()
runApp()
as.numeric(as.character(unlist(school1$Tuition.and.fees.x)))
as.numeric(as.character(unlist(school1$Tuition.and.fees.y)))
runApp()
runApp()
runApp()
runApp()
